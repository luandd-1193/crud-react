{"version":3,"sources":["components/data/data.js","components/atoms/PostItem.js","components/pages/PostList.js","components/pages/PostDetail.js","components/layouts/SiteBar.js","App.js","serviceWorker.js","index.js"],"names":["postsData","PostItem","post","this","props","className","key","id","to","src","image","alt","name","desc","Component","PostList","handlePageClick","e","selectedPage","selected","offset","state","perPage","setState","currentPage","receivedData","bind","data","postData","slice","map","pageCount","Math","ceil","length","Fragment","previousLabel","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","subContainerClassName","activeClassName","PostDetail","find","x","match","params","width","height","controls","dangerouslySetInnerHTML","__html","content","SiteBar","curentSiteBar","handleClickSiteBar","type","aria-label","icon","onClick","href","rel","library","add","faTrash","faEdit","faPlus","faBars","faTimes","faFacebook","faTwitter","faInstagram","faLinkedin","App","isClickDetail","currentId","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.acf39efa.chunk.js","sourcesContent":["import bai1 from \"./bai1.json\";\nimport bai2 from \"./bai2.json\";\n\nvar postsData = [bai1, bai2];\n\nexport default postsData\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default class PostItem extends Component {\n  render() {\n    const { post } = this.props;\n\n    return (\n      <div className=\"col-12 col-md-6 tm-post\" key={post.id}>\n          <hr className=\"tm-hr-primary\"/>\n          <Link to={`/posts/${post.id}`} className=\"effect-lily tm-post-link tm-pt-60\">\n              <div className=\"tm-post-link-inner\">\n                  <img src={post.image} alt=\"\" className=\"img-fluid\"/>\n              </div>\n              <h2 className=\"tm-pt-30 tm-color-primary tm-post-title\">{post.name}</h2>\n          </Link>\n          <p className=\"tm-pt-30\">\n              {post.desc}\n          </p>\n      </div>\n    )\n  }\n}\n","import React, { Component } from \"react\";\nimport data from '../data/data';\nimport PostItem  from '../atoms/PostItem';\nimport ReactPaginate from 'react-paginate';\n\nexport default class PostList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      offset: 0,\n      perPage: 4,\n      currentPage: 0\n    };\n    this.handlePageClick = this.handlePageClick.bind(this);\n  }\n\n  receivedData() {\n    const postsData = data;\n    const slice = postsData.slice(this.state.offset, this.state.offset + this.state.perPage);\n    const postData = slice.map( post => <PostItem post={post} key={post.id}/> );\n    this.setState({\n      pageCount: Math.ceil(postsData.length / this.state.perPage),\n      postData\n    })\n  }\n\n  handlePageClick = (e) => {\n      const selectedPage = e.selected;\n      const offset = selectedPage * this.state.perPage;\n\n      this.setState({\n        currentPage: selectedPage,\n        offset: offset\n      }, () => {\n        this.receivedData()\n      });\n  };\n\n  componentDidMount() {\n    this.receivedData()\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"row tm-row\">\n          {this.state.postData}\n        </div>\n        <ReactPaginate\n          previousLabel={\"prev\"}\n          nextLabel={\"next\"}\n          breakLabel={\"...\"}\n          breakClassName={\"break-me\"}\n          pageCount={this.state.pageCount}\n          marginPagesDisplayed={2}\n          pageRangeDisplayed={5}\n          onPageChange={this.handlePageClick}\n          containerClassName={\"pagination\"}\n          subContainerClassName={\"pages pagination\"}\n          activeClassName={\"active\"}/>\n      </React.Fragment>\n    )\n  }\n}\n","import React, { Component } from \"react\";\nimport data from '../data/data';\n\nexport default class PostDetail extends Component {\n  render() {\n    const post = data.find(x => x.id === this.props.match.params.id);\n\n    return (\n      <div className=\"row tm-row\">\n        <div className=\"col-12\">\n          <img src={post.image} alt=\"\" width=\"954\" height=\"535\" controls className=\"tm-mb-40\"/>\n        </div>\n        <div className=\"col-lg-12 tm-post-col\">\n          <div className=\"tm-post-full\">\n            <div className=\"mb-4\">\n              <h2 className=\"pt-2 tm-color-primary tm-post-title\">{post.name}</h2>\n              <div dangerouslySetInnerHTML={{__html: post.content}} />\n              <span className=\"d-block text-right tm-color-primary\">Created by LuanBkap Blog</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Link } from \"react-router-dom\";\n\nexport default class SiteBar extends Component {\n  state = { curentSiteBar: \"home\" }\n\n  handleClickSiteBar = (className) => {\n    this.setState({\n      curentSiteBar: className\n    });\n  }\n\n  render() {\n    const { curentSiteBar } = this.state;\n\n    return (\n      <header className=\"tm-header\" id=\"tm-header\">\n        <div className=\"tm-header-wrapper\">\n          <button className=\"navbar-toggler\" type=\"button\" aria-label=\"Toggle navigation\">\n              <FontAwesomeIcon icon=\"bars\"/>\n          </button>\n          <div className=\"tm-site-header\">\n              <h1 className=\"text-center\">LuanBkap Blog</h1>\n          </div>\n          <nav className=\"tm-nav\" id=\"tm-nav\">\n            <ul>\n              <li className={`tm-nav-item ${curentSiteBar === \"home\" ? 'active' : ''}`} onClick={() => this.handleClickSiteBar(\"home\")}>\n                <Link to=\"/\" className=\"tm-nav-link\">\n                  Blog Home\n                </Link>\n              </li>\n              <li className=\"tm-nav-item\">\n                <a href=\"post.html\" className=\"tm-nav-link\">\n                  Profile\n                </a>\n              </li>\n              <li className={`tm-nav-item ${curentSiteBar === \"contact\" ? 'active' : ''}`} onClick={() => this.handleClickSiteBar(\"contact\")}>\n                <Link to=\"/contact\" className=\"tm-nav-link\">\n                  Contact Us\n                </Link>\n              </li>\n            </ul>\n          </nav>\n          <div className=\"tm-mb-65\">\n            <a rel=\"nofollow\" href=\"https://fb.com/templatemo\" className=\"tm-social-link\">\n                <FontAwesomeIcon icon={[\"fab\", \"facebook\"]}/>\n            </a>\n            <a href=\"https://twitter.com\" className=\"tm-social-link\">\n                <FontAwesomeIcon icon={[\"fab\", \"twitter\"]}/>\n            </a>\n            <a href=\"https://instagram.com\" className=\"tm-social-link\">\n                <FontAwesomeIcon icon={[\"fab\", \"instagram\"]}/>\n            </a>\n            <a href=\"https://linkedin.com\" className=\"tm-social-link\">\n                <FontAwesomeIcon icon={[\"fab\", \"linkedin\"]}/>\n            </a>\n          </div>\n          <p className=\"tm-mb-80 pr-5 text-white\">\n            LuanBkap Blog là nơi chia sẻ kiến thức IT. Website được sử dụng hoàn toàn bằng reactjs và html\n          </p>\n        </div>\n      </header>\n    )\n  }\n}\n","import React, { Component } from \"react\";\nimport PostList from \"./components/pages/PostList.js\";\nimport PostDetail from \"./components/pages/PostDetail.js\";\nimport SiteBar from \"./components/layouts/SiteBar\";\nimport './App.css';\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faTrash, faPlus, faEdit, faTimes, faBars } from \"@fortawesome/free-solid-svg-icons\";\nimport { faFacebook, faTwitter, faInstagram, faLinkedin } from \"@fortawesome/free-brands-svg-icons\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nlibrary.add(faTrash, faEdit, faPlus, faBars, faTimes, faFacebook, faTwitter, faInstagram, faLinkedin);\n\nexport default class App extends Component {\n  state = {\n    isClickDetail: false,\n    currentId: null\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <BrowserRouter>\n          <SiteBar/>\n          <div className=\"container-fluid\">\n            <main className=\"tm-main\">\n              <Route exact path=\"/\" component={PostList} />\n              <Route path=\"/posts\" component={PostList}>\n                <Route path=\"/posts/:id\" component={PostDetail} />\n              </Route>\n            </main>\n          </div>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}